@model Sistratur.Modelos.Modelos.Alquiler

@{
    ViewBag.Title = "Registrar Alquiler";
}

<script type="text/javascript">

        function myFunction() {

            var d1 = $("#from").val().split("/");
            var dat1 = new Date(d1[2], parseFloat(d1[1]) - 1, parseFloat(d1[0]));
            var d2 = $("#to").val().split("/");
            var dat2 = new Date(d2[2], parseFloat(d2[1]) - 1, parseFloat(d2[0]));

            var fin = dat2.getTime() - dat1.getTime();
            var dias = Math.floor(fin / (1000 * 60 * 60 * 24)) + 1

            var total = dias * $("#Montodia").val()

            $("#NroDias").val(dias);
            $("#MontoTotal").val(total);
        }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <br />
    <h2>Registrar Alquiler</h2>
    <hr />

    <div class="row clearfix">
        <div class="col-md-1 column">
        </div>
        <div class="col-md-11 column">


            <div class="panel panel-primary" style="width:100%">
                <div class="panel-heading">
                    <b>Servicio de Alquiler</b>
                </div>
                <div class="panel-body">

                    <div class="row clearfix">
                        <div class="col-md-3 column">

                            <div class="editor-label">
                                @Html.Label("Cliente")
                            </div>
                            <div class="editor-field">
                                <div class="input-group" style="width:89%">
                                    <div class="input-group-addon" style="width:0.009%"><img src="~/Content/icons/cliente-icon.png" width="18px" /></div>
                                    @Html.DropDownListFor(model => model.ClienteId, (SelectList)ViewBag.ClienteId, new { @class = "form-control", style = "width:230px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.ConductorId, "", new { @class = "text-danger" })
                                </p>
                            </div>
                            <div class="editor-label">
                                @Html.Label("Fecha de Registro")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/fecha-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.FechaRegistro, new { @Value = @DateTime.Now.ToShortDateString(), id = "datepicker", style = "width:100px", @class = "form-control" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.FechaRegistro, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("Hora de Registro")
                            </div>
                            <div class="editor-field">
                                <div class="bfh-timepicker" data-name="HoraRegistro" data-mode="12h" style="width:145px; z-index: 1;">
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.HoraRegistro, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("Observaciones")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/eye-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.Observaciones, new { style = "width:230px;  height:36px; padding-left: 10px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                                </p>
                            </div>

                        </div>
                        <div class="col-md-1 column">
                        </div>
                        <div class="col-md-3 column">

                            <div class="editor-label">
                                @Html.Label("Conductor")
                            </div>
                            <div class="editor-field">
                                <div class="input-group" style="width:89%">
                                    <div class="input-group-addon" style="width:0.009%"><img src="~/Content/icons/driver-icon.png" width="18px" /></div>
                                    @Html.DropDownListFor(model => model.ConductorId, (SelectList)ViewBag.ConductorId, new { @class = "form-control", style = "width:230px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.ConductorId, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("Vehículo")
                            </div>
                            <div class="editor-field">
                                <div class="input-group" style="width:89%">
                                    <div class="input-group-addon" style="width:0.009%"><img src="~/Content/icons/auto-icon.png" width="18px" /></div>
                                    @Html.DropDownListFor(model => model.VehiculoId, (SelectList)ViewBag.AutoId, new { @class = "form-control", style = "width:230px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.VehiculoId, "", new { @class = "text-danger" })
                                </p>
                            </div>
                            
                            <div class="editor-label">
                                @Html.Label("Lugar Referencia")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/city2-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.LugarReferencia, new { style = "width:230px;  height:36px; padding-left: 10px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.LugarReferencia, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("Monto por Día")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/cash1-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.Montodia, new { style = "width:120px;  height:36px; padding-left: 10px;" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.Montodia, "", new { @class = "text-danger" })
                                </p>
                            </div>

                        </div>
                        <div class="col-md-1 column">
                        </div>
                        <div class="col-md-4 column">


                            <div class="editor-label">
                                @Html.Label("Fecha de Inicio")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/calendar2-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.FechaInicio, new { id = "from", style = "width:120px;  height:36px; padding-left: 10px;", @readonly = "readonly" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("Fecha Fin")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/calendar2-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.FechaFin, new { onChange = "myFunction()", id = "to", style = "width:120px;  height:36px; padding-left: 10px;", @readonly = "readonly" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                                </p>
                            </div>

                            <div class="editor-label">
                                @Html.Label("N° de Días")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/days-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.NroDias, new { style = "width:120px; height: 36px; padding - left: 10px; ", @readonly = "readonly", @class = "form-control" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.NroDias, "", new { @class = "text-danger" })
                                </p>
                            </div>



                            <div class="editor-label">
                                @Html.Label("Monto Total")
                            </div>
                            <div class="editor-field">
                                <div class="input-group">
                                    <div class="input-group-addon"><img src="~/Content/icons/cash2-icon.png" width="18px" /></div>
                                    @Html.TextBoxFor(model => model.MontoTotal, new { style = "width:120px;  height:36px; padding-left: 10px;", @readonly = "readonly", @class = "form-control" })
                                </div>
                                <p>
                                    @Html.ValidationMessageFor(model => model.MontoTotal, "", new { @class = "text-danger" })
                                </p>
                            </div>

                        </div>

                    </div>

                </div>
            </div>


        </div>
    </div>

    <div class="row clearfix">
        <div class="col-md-11 column" style="text-align:center">
            <p>
                <button type="submit" class="btn btn-success">GRABAR</button>&nbsp;&nbsp;
                <a href="@Url.Action("Index", "Alquiler")" class="btn btn-danger" style="margin: auto; color: #ffffff;">
                    CANCELAR
                </a>
            </p>
        </div>
    </div>

}

@section Scripts {
                                        @Scripts.Render("~/bundles/jqueryval")

@*<script src="@Url.Content("~/Scripts/jquery-1.11.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>*@
<script src="@Url.Content("~/Scripts/bootstrap-select.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap-formhelpers.js")" type="text/javascript"></script>

<script type="text/javascript">
      jQuery(function ($) {
          $.datepicker.regional['es'] = {
              closeText: 'Cerrar',
              prevText: '&#x3c;Ant',
              nextText: 'Sig&#x3e;',
              currentText: 'Hoy',
              monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
              'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
              monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
              'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
              dayNames: ['Domingo', 'Lunes', 'Martes', 'Mi&eacute;rcoles', 'Jueves', 'Viernes', 'S&aacute;bado'],
              dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mi&eacute;', 'Juv', 'Vie', 'S&aacute;b'],
              dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'S&aacute;'],
              weekHeader: 'Sm',
              dateFormat: 'dd/mm/yy',
              firstDay: 1,
              isRTL: false,
              showMonthAfterYear: false,
              yearSuffix: ''
          };
          $.datepicker.setDefaults($.datepicker.regional['es']);
      });

      $(document).ready(function () {
          $("#datepicker").datepicker();
          $("#datepicker2").datepicker();
          $("#datepicker3").datepicker();
      });
</script>

<script>
      $(function () {
          $("#from").datepicker({
              defaultDate: "+1w",
              changeMonth: true,
              numberOfMonths: 2,
              onClose: function (selectedDate) {
                  $("#to").datepicker("option", "minDate", selectedDate);
              }
          });
          $("#to").datepicker({
              defaultDate: "+1w",
              changeMonth: true,
              numberOfMonths: 2,
              onClose: function (selectedDate) {
                  $("#from").datepicker("option", "maxDate", selectedDate);
              }
          });
      });
</script>

<script>
      restaFechas = function (f1, f2) {
          var aFecha1 = f1.split('/');
          var aFecha2 = f2.split('/');
          var fFecha1 = Date.UTC(aFecha1[2], aFecha1[1] - 1, aFecha1[0]);
          var fFecha2 = Date.UTC(aFecha2[2], aFecha2[1] - 1, aFecha2[0]);
          var dif = fFecha2 - fFecha1;
          var dias = Math.floor(dif / (1000 * 60 * 60 * 24));
          return dias;
      }
</script>

}
